### YamlMime:ManagedReference
items:
- uid: CommonLib.Cache
  commentId: T:CommonLib.Cache
  id: Cache
  parent: CommonLib
  children:
  - CommonLib.Cache.CreateNewCache
  - CommonLib.Cache.LoadExistingCache(System.String)
  - CommonLib.Cache.SaveCache(System.String)
  langs:
  - csharp
  - vb
  name: Cache
  nameWithType: Cache
  fullName: CommonLib.Cache
  type: Class
  source:
    remote:
      path: src/CommonLib/Cache.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: Cache
    path: ../src/CommonLib/Cache.cs
    startLine: 9
  assemblies:
  - CommonLib
  namespace: CommonLib
  syntax:
    content: public class Cache
    content.vb: Public Class Cache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonLib.Cache.CreateNewCache
  commentId: M:CommonLib.Cache.CreateNewCache
  id: CreateNewCache
  parent: CommonLib.Cache
  langs:
  - csharp
  - vb
  name: CreateNewCache()
  nameWithType: Cache.CreateNewCache()
  fullName: CommonLib.Cache.CreateNewCache()
  type: Method
  source:
    remote:
      path: src/CommonLib/Cache.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: CreateNewCache
    path: ../src/CommonLib/Cache.cs
    startLine: 109
  assemblies:
  - CommonLib
  namespace: CommonLib
  syntax:
    content: public static void CreateNewCache()
    content.vb: Public Shared Sub CreateNewCache
  overload: CommonLib.Cache.CreateNewCache*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CommonLib.Cache.LoadExistingCache(System.String)
  commentId: M:CommonLib.Cache.LoadExistingCache(System.String)
  id: LoadExistingCache(System.String)
  parent: CommonLib.Cache
  langs:
  - csharp
  - vb
  name: LoadExistingCache(String)
  nameWithType: Cache.LoadExistingCache(String)
  fullName: CommonLib.Cache.LoadExistingCache(System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Cache.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: LoadExistingCache
    path: ../src/CommonLib/Cache.cs
    startLine: 114
  assemblies:
  - CommonLib
  namespace: CommonLib
  syntax:
    content: public static void LoadExistingCache(string filePath)
    parameters:
    - id: filePath
      type: System.String
    content.vb: Public Shared Sub LoadExistingCache(filePath As String)
  overload: CommonLib.Cache.LoadExistingCache*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CommonLib.Cache.SaveCache(System.String)
  commentId: M:CommonLib.Cache.SaveCache(System.String)
  id: SaveCache(System.String)
  parent: CommonLib.Cache
  langs:
  - csharp
  - vb
  name: SaveCache(String)
  nameWithType: Cache.SaveCache(String)
  fullName: CommonLib.Cache.SaveCache(System.String)
  type: Method
  source:
    remote:
      path: src/CommonLib/Cache.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: SaveCache
    path: ../src/CommonLib/Cache.cs
    startLine: 138
  assemblies:
  - CommonLib
  namespace: CommonLib
  syntax:
    content: public static void SaveCache(string filePath)
    parameters:
    - id: filePath
      type: System.String
    content.vb: Public Shared Sub SaveCache(filePath As String)
  overload: CommonLib.Cache.SaveCache*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CommonLib
  commentId: N:CommonLib
  name: CommonLib
  nameWithType: CommonLib
  fullName: CommonLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CommonLib.Cache.CreateNewCache*
  commentId: Overload:CommonLib.Cache.CreateNewCache
  name: CreateNewCache
  nameWithType: Cache.CreateNewCache
  fullName: CommonLib.Cache.CreateNewCache
- uid: CommonLib.Cache.LoadExistingCache*
  commentId: Overload:CommonLib.Cache.LoadExistingCache
  name: LoadExistingCache
  nameWithType: Cache.LoadExistingCache
  fullName: CommonLib.Cache.LoadExistingCache
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CommonLib.Cache.SaveCache*
  commentId: Overload:CommonLib.Cache.SaveCache
  name: SaveCache
  nameWithType: Cache.SaveCache
  fullName: CommonLib.Cache.SaveCache
