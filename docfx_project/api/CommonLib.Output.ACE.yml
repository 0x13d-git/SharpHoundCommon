### YamlMime:ManagedReference
items:
- uid: CommonLib.Output.ACE
  commentId: T:CommonLib.Output.ACE
  id: ACE
  parent: CommonLib.Output
  children:
  - CommonLib.Output.ACE.AceType
  - CommonLib.Output.ACE.IsInherited
  - CommonLib.Output.ACE.PrincipalSID
  - CommonLib.Output.ACE.PrincipalType
  - CommonLib.Output.ACE.RightName
  - CommonLib.Output.ACE.ToString
  langs:
  - csharp
  - vb
  name: ACE
  nameWithType: ACE
  fullName: CommonLib.Output.ACE
  type: Class
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: ACE
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 6
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public class ACE
    content.vb: Public Class ACE
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonLib.Output.ACE.PrincipalSID
  commentId: P:CommonLib.Output.ACE.PrincipalSID
  id: PrincipalSID
  parent: CommonLib.Output.ACE
  langs:
  - csharp
  - vb
  name: PrincipalSID
  nameWithType: ACE.PrincipalSID
  fullName: CommonLib.Output.ACE.PrincipalSID
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: PrincipalSID
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 8
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public string PrincipalSID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrincipalSID As String
  overload: CommonLib.Output.ACE.PrincipalSID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CommonLib.Output.ACE.PrincipalType
  commentId: P:CommonLib.Output.ACE.PrincipalType
  id: PrincipalType
  parent: CommonLib.Output.ACE
  langs:
  - csharp
  - vb
  name: PrincipalType
  nameWithType: ACE.PrincipalType
  fullName: CommonLib.Output.ACE.PrincipalType
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: PrincipalType
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 9
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public Label PrincipalType { get; set; }
    parameters: []
    return:
      type: CommonLib.Enums.Label
    content.vb: Public Property PrincipalType As Label
  overload: CommonLib.Output.ACE.PrincipalType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CommonLib.Output.ACE.RightName
  commentId: P:CommonLib.Output.ACE.RightName
  id: RightName
  parent: CommonLib.Output.ACE
  langs:
  - csharp
  - vb
  name: RightName
  nameWithType: ACE.RightName
  fullName: CommonLib.Output.ACE.RightName
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: RightName
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 10
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public string RightName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RightName As String
  overload: CommonLib.Output.ACE.RightName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CommonLib.Output.ACE.AceType
  commentId: P:CommonLib.Output.ACE.AceType
  id: AceType
  parent: CommonLib.Output.ACE
  langs:
  - csharp
  - vb
  name: AceType
  nameWithType: ACE.AceType
  fullName: CommonLib.Output.ACE.AceType
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: AceType
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 11
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public string AceType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AceType As String
  overload: CommonLib.Output.ACE.AceType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CommonLib.Output.ACE.IsInherited
  commentId: P:CommonLib.Output.ACE.IsInherited
  id: IsInherited
  parent: CommonLib.Output.ACE
  langs:
  - csharp
  - vb
  name: IsInherited
  nameWithType: ACE.IsInherited
  fullName: CommonLib.Output.ACE.IsInherited
  type: Property
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: IsInherited
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 12
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public bool IsInherited { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsInherited As Boolean
  overload: CommonLib.Output.ACE.IsInherited*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: CommonLib.Output.ACE.ToString
  commentId: M:CommonLib.Output.ACE.ToString
  id: ToString
  parent: CommonLib.Output.ACE
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ACE.ToString()
  fullName: CommonLib.Output.ACE.ToString()
  type: Method
  source:
    remote:
      path: src/CommonLib/OutputTypes/ACE.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: ToString
    path: ../src/CommonLib/OutputTypes/ACE.cs
    startLine: 14
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: CommonLib.Output.ACE.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: CommonLib.Output
  commentId: N:CommonLib.Output
  name: CommonLib.Output
  nameWithType: CommonLib.Output
  fullName: CommonLib.Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CommonLib.Output.ACE.PrincipalSID*
  commentId: Overload:CommonLib.Output.ACE.PrincipalSID
  name: PrincipalSID
  nameWithType: ACE.PrincipalSID
  fullName: CommonLib.Output.ACE.PrincipalSID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CommonLib.Output.ACE.PrincipalType*
  commentId: Overload:CommonLib.Output.ACE.PrincipalType
  name: PrincipalType
  nameWithType: ACE.PrincipalType
  fullName: CommonLib.Output.ACE.PrincipalType
- uid: CommonLib.Enums.Label
  commentId: T:CommonLib.Enums.Label
  parent: CommonLib.Enums
  name: Label
  nameWithType: Label
  fullName: CommonLib.Enums.Label
- uid: CommonLib.Enums
  commentId: N:CommonLib.Enums
  name: CommonLib.Enums
  nameWithType: CommonLib.Enums
  fullName: CommonLib.Enums
- uid: CommonLib.Output.ACE.RightName*
  commentId: Overload:CommonLib.Output.ACE.RightName
  name: RightName
  nameWithType: ACE.RightName
  fullName: CommonLib.Output.ACE.RightName
- uid: CommonLib.Output.ACE.AceType*
  commentId: Overload:CommonLib.Output.ACE.AceType
  name: AceType
  nameWithType: ACE.AceType
  fullName: CommonLib.Output.ACE.AceType
- uid: CommonLib.Output.ACE.IsInherited*
  commentId: Overload:CommonLib.Output.ACE.IsInherited
  name: IsInherited
  nameWithType: ACE.IsInherited
  fullName: CommonLib.Output.ACE.IsInherited
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CommonLib.Output.ACE.ToString*
  commentId: Overload:CommonLib.Output.ACE.ToString
  name: ToString
  nameWithType: ACE.ToString
  fullName: CommonLib.Output.ACE.ToString
