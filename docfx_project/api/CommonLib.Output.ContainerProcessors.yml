### YamlMime:ManagedReference
items:
- uid: CommonLib.Output.ContainerProcessors
  commentId: T:CommonLib.Output.ContainerProcessors
  id: ContainerProcessors
  parent: CommonLib.Output
  children:
  - CommonLib.Output.ContainerProcessors.GetContainerChildObjects(System.DirectoryServices.Protocols.SearchResultEntry)
  - CommonLib.Output.ContainerProcessors.ReadBlocksInheritance(System.DirectoryServices.Protocols.SearchResultEntry)
  - CommonLib.Output.ContainerProcessors.ReadContainerGPLinks(System.DirectoryServices.Protocols.SearchResultEntry)
  langs:
  - csharp
  - vb
  name: ContainerProcessors
  nameWithType: ContainerProcessors
  fullName: CommonLib.Output.ContainerProcessors
  type: Class
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessors.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon
    id: ContainerProcessors
    path: ../src/CommonLib/Processors/ContainerProcessors.cs
    startLine: 8
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public class ContainerProcessors
    content.vb: Public Class ContainerProcessors
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonLib.Output.ContainerProcessors.GetContainerChildObjects(System.DirectoryServices.Protocols.SearchResultEntry)
  commentId: M:CommonLib.Output.ContainerProcessors.GetContainerChildObjects(System.DirectoryServices.Protocols.SearchResultEntry)
  id: GetContainerChildObjects(System.DirectoryServices.Protocols.SearchResultEntry)
  parent: CommonLib.Output.ContainerProcessors
  langs:
  - csharp
  - vb
  name: GetContainerChildObjects(SearchResultEntry)
  nameWithType: ContainerProcessors.GetContainerChildObjects(SearchResultEntry)
  fullName: CommonLib.Output.ContainerProcessors.GetContainerChildObjects(System.DirectoryServices.Protocols.SearchResultEntry)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessors.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon
    id: GetContainerChildObjects
    path: ../src/CommonLib/Processors/ContainerProcessors.cs
    startLine: 10
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public static IAsyncEnumerable<TypedPrincipal> GetContainerChildObjects(SearchResultEntry entry)
    parameters:
    - id: entry
      type: System.DirectoryServices.Protocols.SearchResultEntry
    return:
      type: IAsyncEnumerable{CommonLib.Output.TypedPrincipal}
    content.vb: Public Shared Function GetContainerChildObjects(entry As SearchResultEntry) As IAsyncEnumerable(Of TypedPrincipal)
  overload: CommonLib.Output.ContainerProcessors.GetContainerChildObjects*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CommonLib.Output.ContainerProcessors.ReadContainerGPLinks(System.DirectoryServices.Protocols.SearchResultEntry)
  commentId: M:CommonLib.Output.ContainerProcessors.ReadContainerGPLinks(System.DirectoryServices.Protocols.SearchResultEntry)
  id: ReadContainerGPLinks(System.DirectoryServices.Protocols.SearchResultEntry)
  parent: CommonLib.Output.ContainerProcessors
  langs:
  - csharp
  - vb
  name: ReadContainerGPLinks(SearchResultEntry)
  nameWithType: ContainerProcessors.ReadContainerGPLinks(SearchResultEntry)
  fullName: CommonLib.Output.ContainerProcessors.ReadContainerGPLinks(System.DirectoryServices.Protocols.SearchResultEntry)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessors.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon
    id: ReadContainerGPLinks
    path: ../src/CommonLib/Processors/ContainerProcessors.cs
    startLine: 32
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public static IAsyncEnumerable<GPLink> ReadContainerGPLinks(SearchResultEntry entry)
    parameters:
    - id: entry
      type: System.DirectoryServices.Protocols.SearchResultEntry
    return:
      type: IAsyncEnumerable{CommonLib.Output.GPLink}
    content.vb: Public Shared Function ReadContainerGPLinks(entry As SearchResultEntry) As IAsyncEnumerable(Of GPLink)
  overload: CommonLib.Output.ContainerProcessors.ReadContainerGPLinks*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CommonLib.Output.ContainerProcessors.ReadBlocksInheritance(System.DirectoryServices.Protocols.SearchResultEntry)
  commentId: M:CommonLib.Output.ContainerProcessors.ReadBlocksInheritance(System.DirectoryServices.Protocols.SearchResultEntry)
  id: ReadBlocksInheritance(System.DirectoryServices.Protocols.SearchResultEntry)
  parent: CommonLib.Output.ContainerProcessors
  langs:
  - csharp
  - vb
  name: ReadBlocksInheritance(SearchResultEntry)
  nameWithType: ContainerProcessors.ReadBlocksInheritance(SearchResultEntry)
  fullName: CommonLib.Output.ContainerProcessors.ReadBlocksInheritance(System.DirectoryServices.Protocols.SearchResultEntry)
  type: Method
  source:
    remote:
      path: src/CommonLib/Processors/ContainerProcessors.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon
    id: ReadBlocksInheritance
    path: ../src/CommonLib/Processors/ContainerProcessors.cs
    startLine: 63
  assemblies:
  - CommonLib
  namespace: CommonLib.Output
  syntax:
    content: public static bool ReadBlocksInheritance(SearchResultEntry entry)
    parameters:
    - id: entry
      type: System.DirectoryServices.Protocols.SearchResultEntry
    return:
      type: System.Boolean
    content.vb: Public Shared Function ReadBlocksInheritance(entry As SearchResultEntry) As Boolean
  overload: CommonLib.Output.ContainerProcessors.ReadBlocksInheritance*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CommonLib.Output
  commentId: N:CommonLib.Output
  name: CommonLib.Output
  nameWithType: CommonLib.Output
  fullName: CommonLib.Output
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CommonLib.Output.ContainerProcessors.GetContainerChildObjects*
  commentId: Overload:CommonLib.Output.ContainerProcessors.GetContainerChildObjects
  name: GetContainerChildObjects
  nameWithType: ContainerProcessors.GetContainerChildObjects
  fullName: CommonLib.Output.ContainerProcessors.GetContainerChildObjects
- uid: System.DirectoryServices.Protocols.SearchResultEntry
  commentId: T:System.DirectoryServices.Protocols.SearchResultEntry
  parent: System.DirectoryServices.Protocols
  isExternal: true
  name: SearchResultEntry
  nameWithType: SearchResultEntry
  fullName: System.DirectoryServices.Protocols.SearchResultEntry
- uid: IAsyncEnumerable{CommonLib.Output.TypedPrincipal}
  commentId: '!:IAsyncEnumerable{CommonLib.Output.TypedPrincipal}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<TypedPrincipal>
  nameWithType: IAsyncEnumerable<TypedPrincipal>
  fullName: IAsyncEnumerable<CommonLib.Output.TypedPrincipal>
  nameWithType.vb: IAsyncEnumerable(Of TypedPrincipal)
  fullName.vb: IAsyncEnumerable(Of CommonLib.Output.TypedPrincipal)
  name.vb: IAsyncEnumerable(Of TypedPrincipal)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CommonLib.Output.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: CommonLib.Output.TypedPrincipal
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CommonLib.Output.TypedPrincipal
    name: TypedPrincipal
    nameWithType: TypedPrincipal
    fullName: CommonLib.Output.TypedPrincipal
  - name: )
    nameWithType: )
    fullName: )
- uid: System.DirectoryServices.Protocols
  commentId: N:System.DirectoryServices.Protocols
  isExternal: true
  name: System.DirectoryServices.Protocols
  nameWithType: System.DirectoryServices.Protocols
  fullName: System.DirectoryServices.Protocols
- uid: IAsyncEnumerable`1
  isExternal: true
  name: IAsyncEnumerable<>
  nameWithType: IAsyncEnumerable<>
  fullName: IAsyncEnumerable<>
  nameWithType.vb: IAsyncEnumerable(Of )
  fullName.vb: IAsyncEnumerable(Of )
  name.vb: IAsyncEnumerable(Of )
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CommonLib.Output.ContainerProcessors.ReadContainerGPLinks*
  commentId: Overload:CommonLib.Output.ContainerProcessors.ReadContainerGPLinks
  name: ReadContainerGPLinks
  nameWithType: ContainerProcessors.ReadContainerGPLinks
  fullName: CommonLib.Output.ContainerProcessors.ReadContainerGPLinks
- uid: IAsyncEnumerable{CommonLib.Output.GPLink}
  commentId: '!:IAsyncEnumerable{CommonLib.Output.GPLink}'
  definition: IAsyncEnumerable`1
  name: IAsyncEnumerable<GPLink>
  nameWithType: IAsyncEnumerable<GPLink>
  fullName: IAsyncEnumerable<CommonLib.Output.GPLink>
  nameWithType.vb: IAsyncEnumerable(Of GPLink)
  fullName.vb: IAsyncEnumerable(Of CommonLib.Output.GPLink)
  name.vb: IAsyncEnumerable(Of GPLink)
  spec.csharp:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CommonLib.Output.GPLink
    name: GPLink
    nameWithType: GPLink
    fullName: CommonLib.Output.GPLink
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IAsyncEnumerable`1
    name: IAsyncEnumerable
    nameWithType: IAsyncEnumerable
    fullName: IAsyncEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CommonLib.Output.GPLink
    name: GPLink
    nameWithType: GPLink
    fullName: CommonLib.Output.GPLink
  - name: )
    nameWithType: )
    fullName: )
- uid: CommonLib.Output.ContainerProcessors.ReadBlocksInheritance*
  commentId: Overload:CommonLib.Output.ContainerProcessors.ReadBlocksInheritance
  name: ReadBlocksInheritance
  nameWithType: ContainerProcessors.ReadBlocksInheritance
  fullName: CommonLib.Output.ContainerProcessors.ReadBlocksInheritance
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
