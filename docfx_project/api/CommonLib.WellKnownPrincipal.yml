### YamlMime:ManagedReference
items:
- uid: CommonLib.WellKnownPrincipal
  commentId: T:CommonLib.WellKnownPrincipal
  id: WellKnownPrincipal
  parent: CommonLib
  children:
  - CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String,CommonLib.Output.TypedPrincipal@)
  - CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String,System.String,CommonLib.Output.TypedPrincipal@)
  langs:
  - csharp
  - vb
  name: WellKnownPrincipal
  nameWithType: WellKnownPrincipal
  fullName: CommonLib.WellKnownPrincipal
  type: Class
  source:
    remote:
      path: src/CommonLib/WellKnownPrincipal.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: WellKnownPrincipal
    path: ../src/CommonLib/WellKnownPrincipal.cs
    startLine: 5
  assemblies:
  - CommonLib
  namespace: CommonLib
  syntax:
    content: public class WellKnownPrincipal
    content.vb: Public Class WellKnownPrincipal
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String,System.String,CommonLib.Output.TypedPrincipal@)
  commentId: M:CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String,System.String,CommonLib.Output.TypedPrincipal@)
  id: GetWellKnownPrincipal(System.String,System.String,CommonLib.Output.TypedPrincipal@)
  parent: CommonLib.WellKnownPrincipal
  langs:
  - csharp
  - vb
  name: GetWellKnownPrincipal(String, String, out TypedPrincipal)
  nameWithType: WellKnownPrincipal.GetWellKnownPrincipal(String, String, out TypedPrincipal)
  fullName: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String, System.String, out CommonLib.Output.TypedPrincipal)
  type: Method
  source:
    remote:
      path: src/CommonLib/WellKnownPrincipal.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: GetWellKnownPrincipal
    path: ../src/CommonLib/WellKnownPrincipal.cs
    startLine: 19
  assemblies:
  - CommonLib
  namespace: CommonLib
  syntax:
    content: public static bool GetWellKnownPrincipal(string sid, string domain, out TypedPrincipal commonPrincipal)
    parameters:
    - id: sid
      type: System.String
    - id: domain
      type: System.String
    - id: commonPrincipal
      type: CommonLib.Output.TypedPrincipal
    return:
      type: System.Boolean
    content.vb: Public Shared Function GetWellKnownPrincipal(sid As String, domain As String, ByRef commonPrincipal As TypedPrincipal) As Boolean
  overload: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal*
  nameWithType.vb: WellKnownPrincipal.GetWellKnownPrincipal(String, String, ByRef TypedPrincipal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String, System.String, ByRef CommonLib.Output.TypedPrincipal)
  name.vb: GetWellKnownPrincipal(String, String, ByRef TypedPrincipal)
- uid: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String,CommonLib.Output.TypedPrincipal@)
  commentId: M:CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String,CommonLib.Output.TypedPrincipal@)
  id: GetWellKnownPrincipal(System.String,CommonLib.Output.TypedPrincipal@)
  parent: CommonLib.WellKnownPrincipal
  langs:
  - csharp
  - vb
  name: GetWellKnownPrincipal(String, out TypedPrincipal)
  nameWithType: WellKnownPrincipal.GetWellKnownPrincipal(String, out TypedPrincipal)
  fullName: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String, out CommonLib.Output.TypedPrincipal)
  type: Method
  source:
    remote:
      path: src/CommonLib/WellKnownPrincipal.cs
      branch: master
      repo: https://github.com/0x13d-git/SharpHoundCommon.git
    id: GetWellKnownPrincipal
    path: ../src/CommonLib/WellKnownPrincipal.cs
    startLine: 33
  assemblies:
  - CommonLib
  namespace: CommonLib
  summary: "\nGets the principal associated with a well known SID\n"
  example: []
  syntax:
    content: public static bool GetWellKnownPrincipal(string sid, out TypedPrincipal commonPrincipal)
    parameters:
    - id: sid
      type: System.String
      description: ''
    - id: commonPrincipal
      type: CommonLib.Output.TypedPrincipal
      description: ''
    return:
      type: System.Boolean
      description: True if SID matches a well known principal, false otherwise
    content.vb: Public Shared Function GetWellKnownPrincipal(sid As String, ByRef commonPrincipal As TypedPrincipal) As Boolean
  overload: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal*
  nameWithType.vb: WellKnownPrincipal.GetWellKnownPrincipal(String, ByRef TypedPrincipal)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal(System.String, ByRef CommonLib.Output.TypedPrincipal)
  name.vb: GetWellKnownPrincipal(String, ByRef TypedPrincipal)
references:
- uid: CommonLib
  commentId: N:CommonLib
  name: CommonLib
  nameWithType: CommonLib
  fullName: CommonLib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal*
  commentId: Overload:CommonLib.WellKnownPrincipal.GetWellKnownPrincipal
  name: GetWellKnownPrincipal
  nameWithType: WellKnownPrincipal.GetWellKnownPrincipal
  fullName: CommonLib.WellKnownPrincipal.GetWellKnownPrincipal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: CommonLib.Output.TypedPrincipal
  commentId: T:CommonLib.Output.TypedPrincipal
  parent: CommonLib.Output
  name: TypedPrincipal
  nameWithType: TypedPrincipal
  fullName: CommonLib.Output.TypedPrincipal
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CommonLib.Output
  commentId: N:CommonLib.Output
  name: CommonLib.Output
  nameWithType: CommonLib.Output
  fullName: CommonLib.Output
